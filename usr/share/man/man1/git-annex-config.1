.TH git-annex-config 1
.SH NAME
git-annex-config \- configuration stored in git-annex branch
.PP
.SH SYNOPSIS
git annex config \-\-set name value
.PP
git annex config \-\-get name
.PP
git annex config \-\-unset name
.PP
.SH DESCRIPTION
Set or get configuration settings stored in the git-annex branch.
.PP
Unlike \fBgit config\fP settings, these settings can be seen
in all clones of the repository, once they have gotten their
git-annex branches in sync.
.PP
These settings can be overridden on a per\-repository basis using
\fBgit config\fP.
.PP
git-annex does not check the git-annex branch for all the \fBgit config\fP
settings that affect it (which are listed on the git-annex man page
CONFIGURATION section). Only a few make sense to be able to set such
that all clones of a repository see the setting, and so git-annex only
looks for these.
.PP
.SH SUPPORTED SETTINGS
.IP "\fBannex.largefiles\fP"
.IP
Used to configure which files are large enough to be added to the annex.
It is an expression that matches the large files, eg
"\fBinclude=*.mp3 or largerthan(500kb)\fP".
See git-annex\-matching\-expression(1) for details on the syntax.
.IP
This sets a default, which can be overridden by annex.largefiles
attributes in \fB.gitattributes\fP files, or by \fBgit config\fP.
.IP
.IP "\fBannex.dotfiles\fP"
Normally, dotfiles are assumed to be files like .gitignore,
whose content should always be part of the git repository, so 
they will not be added to the annex. Setting annex.dotfiles to true
makes dotfiles be added to the annex the same as any other file. 
.IP
This sets a default, which can be overridden by annex.dotfiles
in \fBgit config\fP.
.IP
.IP "\fBannex.addunlocked\fP"
Commands like \fBgit-annex add\fP default to adding files to the repository
in locked form. This can make them add the files in unlocked form,
the same as if git-annex\-unlock(1) were run on the files.
.IP
This can be set to "true" to add everything unlocked, or it can be a more
complicated expression that matches files by name, size, or content. See
git-annex\-matching\-expression(1) for details.
.IP
This sets a default, which can be overridden by annex.addunlocked
in \fBgit config\fP.
.IP
.IP "\fBannex.autocommit\fP"
Set to false to prevent the \fBgit-annex assistant\fP and \fBgit-annex sync\fP
from automatically committing changes to files in the repository.
.IP
.IP "\fBannex.resolvemerge\fP"
Set to false to prevent merge conflicts in the checked out branch
being automatically resolved by the \fBgit-annex assitant\fP,
\fBgit-annex sync\fP, \fBgit-annex merge\fP, and the \fBgit-annex post\-receive\fP
hook.
.IP
.IP "\fBannex.synccontent\fP"
Set to true to make git-annex sync default to syncing annexed content.
.IP
.IP "\fBannex.synconlyannex\fP"
Set to true to make git-annex sync default to only sync the git-annex
branch and annexed content.
.IP
.IP "\fBannex.securehashesonly\fP"
Set to true to indicate that the repository should only use
cryptographically secure hashes (SHA2, SHA3) and not insecure
hashes (MD5, SHA1) for content.
.IP
When this is set, the contents of files using cryptographically
insecure hashes will not be allowed to be added to the repository.
.IP
Also, \fBgit-annex fsck\fP will complain about any files present in
the repository that use insecure hashes.
.IP
Note that this is only read from the git-annex branch by
\fBgit annex init\fP, and is copied to the corresponding git config setting. 
So, changes to the value in the git-annex branch won't affect a
repository once it has been initialized.
.IP
.SH OPTIONS
.IP "\fB\-\-set name value\fP"
.IP
Set a value.
.IP
.IP "\fB\-\-get name\fP"
Get a value.
.IP
.IP "\fB\-\-unset\fP"
Unset a value.
.IP
.IP "Also the git-annex\-common\-options(1) can be used."
.SH EXAMPLE
Suppose you want to prevent git annex sync from committing changes
to files, so a manual git commit workflow is used in all clones of the
repository. Then run:
.PP
 git annex config \-\-set annex.autocommit false
.PP
If you want to override that in a partiticular clone, just use git config
in the clone:
.PP
 git config annex.autocommit true
.PP
And to get back to the default behavior:
.PP
 git annex config \-\-unset annex.autocommit
.PP
.SH SEE ALSO
git-annex(1)
.PP
git\-config(1)
.PP
git-annex\-vicfg(1)
.PP
.SH AUTHOR
Joey Hess <id@joeyh.name>
.PP
.PP

