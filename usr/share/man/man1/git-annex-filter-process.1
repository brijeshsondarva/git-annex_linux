.TH git-annex-filter-process 1
.SH NAME
git-annex-filter\-process \- long running git filter process for git-annex
.PP
.SH SYNOPSIS
git annex filter\-process
.PP
.SH DESCRIPTION
When this is not enabled, each file that git wants to filter involves
starting up a new \fBgit-annex smudge\fP process. Starting many such processes
for many files can be slow, and can make commands like \fBgit checkout\fP and
\fBgit add\fP slow when they are operating on a lot of files. (A lot of locked
annexed files do not make \fBgit checkout\fP slow, but unlocked files and
non\-annexed files do slow it down.)
.PP
On the other hand when this is enabled, \fBgit add\fP of a large file does an
unncessary extra read of the file, and pipes its contents into git-annex.
So when this is enabled, it will be faster to use \fBgit-annex add\fP to add
large files to the annex, rather than \fBgit add\fP. Other commands that
add files, like \fBgit commit \-a\fP, are also impacted by this.
.PP
This is used by default in git-annex repositories v9 and above, while
v8 repositories use \fBgit-annex smudge\fP for backwards compatability with
older versions of git-annex.
.PP
To enable this in a v8 repository, run:
.PP
 git config filter.annex.process 'git-annex filter\-process'
.PP
To disable it, you can just unset the config:
.PP
 git config \-\-unset filter.annex.process
.PP
There will be no visible difference in behavior between enabling this and
not, besides changes in speed and memory use when using git.
.PP
.SH OPTIONS
.IP "The git-annex\-common\-options(1) can be used."
.IP
.SH SEE ALSO
git-annex(1)
git-annex\-smudge(1)
.PP
.SH AUTHOR
Joey Hess <id@joeyh.name>
.PP
.PP

